// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  CREDENTIALS
  GOOGLE
}

model Account {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String?
  provider    Provider
  userProfile UserProfile? @relation("UserAccount")
}

model UserProfile {
  id               String        @id @default(uuid())
  account          Account?      @relation("UserAccount", fields: [accountId], references: [id], onDelete: Cascade)
  accountId        String?       @unique
  email            String        @unique
  username         String
  avatar           String
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now())
  followers        UserProfile[] @relation("UserFollows")
  following        UserProfile[] @relation("UserFollows")
  posts            Post[]        @relation("UserPosts")
  likedPosts       Post[]        @relation("likedPosts")
  commentedOnPosts Comment[]     @relation("UserCommentOnPost")
  about            String?
}

model Post {
  id            String        @id @default(uuid())
  userProfile   UserProfile   @relation("UserPosts", fields: [userProfileId], references: [id], onDelete: Cascade)
  userProfileId String
  likedBy       UserProfile[] @relation("likedPosts")
  caption       String?
  comments      Comment[]     @relation("postComments")
  imageUrl      String
  createdAt     DateTime      @default(now())
  UpdatedAt     DateTime      @default(now())
}

model Comment {
  id      String      @id @default(uuid())
  message String
  user    UserProfile @relation("UserCommentOnPost", fields: [userId], references: [id])
  userId  String
  post    Post        @relation("postComments", fields: [postId], references: [id])
  postId  String
}
